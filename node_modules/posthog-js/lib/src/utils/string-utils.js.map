{"version":3,"file":"string-utils.js","sourceRoot":"","sources":["../../../src/utils/string-utils.ts"],"names":[],"mappings":";;;AAEA,4BAEC;AAgBD,wDAEC;AApBD,SAAgB,QAAQ,CAAC,GAAuB,EAAE,MAAe;IAC7D,OAAQ,GAAW,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;AAC9C,CAAC;AAEM,IAAM,IAAI,GAAG,UAAU,GAAW;IACrC,gEAAgE;IAChE,gLAAgL;IAChL,qJAAqJ;IACrJ,uEAAuE;IACvE,OAAO,GAAG,CAAC,IAAI,EAAE,CAAA;AACrB,CAAC,CAAA;AANY,QAAA,IAAI,QAMhB;AAED,aAAa;AACb,uCAAuC;AAChC,IAAM,kBAAkB,GAAG,UAAU,CAAS;IACjD,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;AAC/B,CAAC,CAAA;AAFY,QAAA,kBAAkB,sBAE9B;AAED,SAAgB,sBAAsB,CAAC,KAAa;IAChD,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAA;AACtE,CAAC","sourcesContent":["export function includes(str: string, needle: string): boolean\nexport function includes<T>(arr: T[], needle: T): boolean\nexport function includes(str: unknown[] | string, needle: unknown): boolean {\n    return (str as any).indexOf(needle) !== -1\n}\n\nexport const trim = function (str: string): string {\n    // Previous implementation was using underscore's trim function.\n    // When switching to just using the native trim() function, we ran some tests to make sure that it was able to trim both the BOM character \\uFEFF and the NBSP character \\u00A0.\n    // We tested modern Chrome (134.0.6998.118) and Firefox (136.0.2), and IE11 running on Windows 10, and all of them were able to trim both characters.\n    // See https://posthog.slack.com/archives/C0113360FFV/p1742811455647359\n    return str.trim()\n}\n\n// UNDERSCORE\n// Embed part of the Underscore Library\nexport const stripLeadingDollar = function (s: string): string {\n    return s.replace(/^\\$/, '')\n}\n\nexport function isDistinctIdStringLike(value: string): boolean {\n    return ['distinct_id', 'distinctid'].includes(value.toLowerCase())\n}\n"]}