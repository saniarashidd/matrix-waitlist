{"version":3,"file":"bucketed-rate-limiter.js","sourceRoot":"","sources":["../../../src/utils/bucketed-rate-limiter.ts"],"names":[],"mappings":";;;AAAA,+CAA6C;AAE7C;IAQI,6BACqB,QAKhB;QANL,iBAyBC;QAxBoB,aAAQ,GAAR,QAAQ,CAKxB;QARG,aAAQ,GAA2B,EAAE,CAAA;QA6BrC,mBAAc,GAAG;YACrB,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;gBACnC,IAAM,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,WAAW,CAAA;gBAEzD,IAAI,SAAS,IAAI,KAAI,CAAC,WAAW,EAAE,CAAC;oBAChC,OAAO,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;gBAC7B,CAAC;qBAAM,CAAC;oBACJ,KAAI,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;gBACnC,CAAC;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAA;QAEO,eAAU,GAAG,UAAC,GAAe;YACjC,OAAO,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QACrC,CAAC,CAAA;QACO,eAAU,GAAG,UAAC,GAAe,EAAE,KAAa;YAChD,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAA;QACtC,CAAC,CAAA;QAEM,qBAAgB,GAAG,UAAC,GAAM;;YAC7B,IAAI,MAAM,GAAG,MAAA,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mCAAI,KAAI,CAAC,WAAW,CAAA;YACrD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;YAEhC,IAAI,MAAM,KAAK,CAAC,EAAE,CAAC;gBACf,OAAO,IAAI,CAAA;YACf,CAAC;YAED,KAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;YAE5B,IAAM,cAAc,GAAG,MAAM,KAAK,CAAC,CAAA;YAEnC,IAAI,cAAc,EAAE,CAAC;gBACjB,MAAA,KAAI,CAAC,oBAAoB,sDAAG,GAAG,CAAC,CAAA;YACpC,CAAC;YAED,OAAO,cAAc,CAAA;QACzB,CAAC,CAAA;QAvDG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAA;QAC9D,IAAI,CAAC,WAAW,GAAG,IAAA,2BAAY,EAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,GAAG,EAAE,0BAA0B,CAAC,CAAA;QAC7F,IAAI,CAAC,WAAW,GAAG,IAAA,2BAAY,EAC3B,IAAI,CAAC,QAAQ,CAAC,UAAU,EACxB,CAAC,EACD,IAAI,CAAC,WAAW,EAAE,qCAAqC;QACvD,0BAA0B,CAC7B,CAAA;QACD,IAAI,CAAC,eAAe,GAAG,IAAA,2BAAY,EAC/B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAC5B,CAAC,EACD,QAAQ,EAAE,0BAA0B;QACpC,8BAA8B,CACjC,CAAA;QACD,WAAW,CAAC;YACR,KAAI,CAAC,cAAc,EAAE,CAAA;QACzB,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAA;IAC5B,CAAC;IAuCL,0BAAC;AAAD,CAAC,AAxED,IAwEC;AAxEY,kDAAmB","sourcesContent":["import { clampToRange } from './number-utils'\n\nexport class BucketedRateLimiter<T extends string | number> {\n    private _bucketSize\n    private _refillRate\n    private _refillInterval\n    private _onBucketRateLimited?: (key: T) => void\n\n    private _buckets: Record<string, number> = {}\n\n    constructor(\n        private readonly _options: {\n            bucketSize: number\n            refillRate: number\n            refillInterval: number\n            _onBucketRateLimited?: (key: T) => void\n        }\n    ) {\n        this._onBucketRateLimited = this._options._onBucketRateLimited\n        this._bucketSize = clampToRange(this._options.bucketSize, 0, 100, 'rate limiter bucket size')\n        this._refillRate = clampToRange(\n            this._options.refillRate,\n            0,\n            this._bucketSize, // never refill more than bucket size\n            'rate limiter refill rate'\n        )\n        this._refillInterval = clampToRange(\n            this._options.refillInterval,\n            0,\n            86400000, // one day in milliseconds\n            'rate limiter refill interval'\n        )\n        setInterval(() => {\n            this._refillBuckets()\n        }, this._refillInterval)\n    }\n\n    private _refillBuckets = () => {\n        Object.keys(this._buckets).forEach((key) => {\n            const newTokens = this._getBucket(key) + this._refillRate\n\n            if (newTokens >= this._bucketSize) {\n                delete this._buckets[key]\n            } else {\n                this._setBucket(key, newTokens)\n            }\n        })\n    }\n\n    private _getBucket = (key: T | string) => {\n        return this._buckets[String(key)]\n    }\n    private _setBucket = (key: T | string, value: number) => {\n        this._buckets[String(key)] = value\n    }\n\n    public consumeRateLimit = (key: T) => {\n        let tokens = this._getBucket(key) ?? this._bucketSize\n        tokens = Math.max(tokens - 1, 0)\n\n        if (tokens === 0) {\n            return true\n        }\n\n        this._setBucket(key, tokens)\n\n        const hasReachedZero = tokens === 0\n\n        if (hasReachedZero) {\n            this._onBucketRateLimited?.(key)\n        }\n\n        return hasReachedZero\n    }\n}\n"]}